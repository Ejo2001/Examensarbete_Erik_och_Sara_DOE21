name: Test docker image and deploy
run-name: ${{ github.actor }} pushed 
on: [push]


jobs:
  deploy_migration:
      runs-on: ubuntu-latest


      env:
        ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }} 
        ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
        JIRA_DOMAIN: ${{ secrets.JIRA_DOMAIN }} 
        JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
        JIRA_ACCOUNT_EMAIL: ${{ secrets.JIRA_ACCOUNT_EMAIL }}
        JIRA_PROJECT_ID: ${{ secrets.JIRA_PROJECT_ID }}
        AZURE_ORGANISATION: ${{ secrets.AZURE_ORGANISATION }}
        AZURE_API_TOKEN: ${{ secrets.AZURE_API_TOKEN }}
        AZURE_PROJECT_NAME: ${{ secrets.AZURE_PROJECT_NAME }}
        ZEPHYR_API_TOKEN: ${{ secrets.ZEPHYR_API_TOKEN }}
        EJO_GITHUB_USERNAME: ${{ secrets.EJO_GITHUB_USERNAME }}
        EJO_GITHUB_TOKEN: ${{ secrets.EJO_GITHUB_TOKEN }}
        TF_VAR_RBAC_TOKEN: ${{ secrets.TF_VAR_RBAC_TOKEN }}
        ANSIBLE_HOST_KEY_CHECKING: False

      steps:
        - run: az login --service-principal -u ${{ secrets.ARM_CLIENT_ID }} -p ${{ secrets.ARM_CLIENT_SECRET }} --tenant ${{ secrets.ARM_TENANT_ID }}
        - run: sudo apt-get update && sudo apt-get install -y gnupg software-properties-common 
        - run: wget -O- https://apt.releases.hashicorp.com/gpg | gpg --dearmor | sudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg
        - run: gpg --no-default-keyring --keyring /usr/share/keyrings/hashicorp-archive-keyring.gpg --fingerprint
        - run: echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
        - run: sudo apt update
        - run: sudo apt-get install terraform python3 python3-pip
        - run: python3 -m pip install ansible
        - name: checkout repo
          uses: actions/checkout@v2.3.4
        - run: terraform init
        - run: terraform apply -auto-approve
        - run: az keyvault set-policy -n ejoexamkeyvault --secret-permissions get list set --spn ${{ secrets.APP_ID }}
        - run: az keyvault secret set --name ZEPHYR-API-TOKEN --vault-name ejoexamkeyvault --value $ZEPHYR_API_TOKEN
        - run: az keyvault secret set --name AZURE-API-TOKEN --vault-name ejoexamkeyvault --value $AZURE_API_TOKEN
        - run: az keyvault secret set --name AZURE-ORGANISATION --vault-name ejoexamkeyvault --value $AZURE_ORGANISATION
        - run: az keyvault secret set --name JIRA-ACCOUNT-EMAIL --vault-name ejoexamkeyvault --value $JIRA_ACCOUNT_EMAIL
        - run: az keyvault secret set --name JIRA-API-TOKEN --vault-name ejoexamkeyvault --value $JIRA_API_TOKEN
        - run: az keyvault secret set --name JIRA-DOMAIN --vault-name ejoexamkeyvault --value $JIRA_DOMAIN
        - run: az keyvault secret set --name EJO-GITHUB-USERNAME --vault-name ejoexamkeyvault --value $EJO_GITHUB_USERNAME
        - run: az keyvault secret set --name EJO-GITHUB-TOKEN --vault-name ejoexamkeyvault --value $EJO_GITHUB_TOKEN
        - run: chmod 600 $(pwd)/examensarbete_key_private
        - run: chmod 700 $(pwd)
        - run: ansible-playbook migration-playbook.yml -v --extra-vars="tenant=$ARM_TENANT_ID user=$ARM_CLIENT_ID secret=$ARM_CLIENT_SECRET githubuser=$EJO_GITHUB_USERNAME githubsecret=$EJO_GITHUB_TOKEN jiraprojectid=$JIRA_PROJECT_ID azureprojectname=$AZURE_PROJECT_NAME" -i public_ip.txt --key-file "$(pwd)/examensarbete_key_private" --user "adminuser"
        - run: terraform destroy -auto-approve
